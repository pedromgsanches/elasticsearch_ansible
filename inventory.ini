[elasticsearch]
essrv01 http_host=essrv01 transport_host=essrv01
essrv02 http_host=essrv02 transport_host=essrv02
essrv03 http_host=essrv03 transport_host=essrv03

[kibana]
essrv01

[all:vars]
es_version="8.17.3"
es_arch="x86_64"

# --------------------------------- Server -------------------------------
es_user="elasticsearch"
es_group="elasticsearch"

es_home="/opt/elastic"
es_bin_dir="{{ es_home }}/bin"
es_conf_dir="{{ es_home }}/conf"
es_data_dir="{{ es_home }}/data"
es_logs_dir="{{ es_home }}/log"
es_repo_dir="{{ es_home }}/backup"

# -------------------------------- Cluster ------------------------------
cluster_name="elasticsearch-cluster"
node_name="{{ ansible_hostname }}"
node_roles="[ master, data, ingest, transform, remote_cluster_client ]"

# -------------------------------- Memory -------------------------------
memory_lock="true"
JVM_MEMORY=16g

# -------------------------------- Network ------------------------------
network_host="0.0.0.0"
network_publish_host="0.0.0.0"
http_port="9200"
transport_port="9300"

# --------------------------------- Discovery ----------------------------------
host1="essrv01"
host2="essrv02"
host3="essrv03"

initial_master1="{{ host1 }}"
initial_master2="{{ host2 }}"

# -------------------------------- Thread Pool ---------------------------------
thread_pool_search_queue_size=1000
thread_pool_write_queue_size=10000

# ------------------------------ X-Pack ----------------------------------------
xpack_enabled=true
ssl_ca=ca.crt
ssl_cert=dual.crt
ssl_key=dual.key

http_ssl_enabled=true
http_ssl_ca={{ es_conf_dir }}/{{ ssl_ca }}
http_ssl_cert={{ es_conf_dir }}/{{ ssl_cert }}
http_ssl_key={{ es_conf_dir }}/{{ ssl_key }}

transport_ssl_enabled=true
transport_ssl_verification_mode="certificate"
transport_ssl_ca={{ es_conf_dir }}/{{ ssl_ca }}
transport_ssl_cert={{ es_conf_dir }}/{{ ssl_cert }}
transport_ssl_key={{ es_conf_dir }}/{{ ssl_key }}

# ---------------------------- Certificates PW --------------------------------
es_tls_certs_pass=bananas
es_tls_certs_ca_pass=batatas

# ---------------------------- Backup -----------------------------------------
backup_schedule="0 30 1 * * ?"
backup_expire=30d
backup_min_count=1
backup_max_count=3

